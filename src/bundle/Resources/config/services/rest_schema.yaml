services:
    _defaults:
        public: false
        autowire: true
        autoconfigure: true

    Ibexa\Test\Rest\Schema\Validator\SchemaValidatorRegistry:
        public: true
        arguments:
            $validators: !tagged_iterator { tag: ibexa.test.rest.schema.validator, index_by: format }

    Ibexa\Test\Rest\Schema\SchemaStorageFactory: ~

    Ibexa\Test\Rest\Schema\Validator\BaseSchemaValidator: ~

    Ibexa\Test\Rest\Schema\Validator\JsonSchemaValidator:
        parent: Ibexa\Test\Rest\Schema\Validator\BaseSchemaValidator
        arguments:
            $validator: '@ibexa.test.rest.json_schema.validator'
        tags:
            - { name: ibexa.test.rest.schema.validator, format: json }

    Ibexa\Test\Rest\Schema\Validator\XmlSchemaValidator:
        parent: Ibexa\Test\Rest\Schema\Validator\BaseSchemaValidator
        tags:
            - { name: ibexa.test.rest.schema.validator, format: xml }

    ibexa.test.rest.json_schema.validator:
        class: JsonSchema\Validator
        arguments:
            $factory: '@ibexa.test.rest.json_schema.factory'

    ibexa.test.rest.json_schema.factory:
        class: JsonSchema\Constraints\Factory
        arguments:
            $schemaStorage: '@ibexa.test.rest.json_schema.schema_storage'

    ibexa.test.rest.json_schema.schema_storage:
        class: JsonSchema\SchemaStorage
        factory: ['@Ibexa\Test\Rest\Schema\SchemaStorageFactory', 'create']
        arguments:
            $uriRetriever: '@ibexa.test.rest.json_schema.uri_retriever'
            $schemas: !tagged_iterator ibexa.test.rest.schema_provider

    Ibexa\Test\Rest\Schema\ErrorSchemaProvider:
        tags:
            - { name: ibexa.test.rest.schema_provider }

    ibexa.test.rest.json_schema.uri_retriever:
        class: JsonSchema\Uri\UriRetriever
